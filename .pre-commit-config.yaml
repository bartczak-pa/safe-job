# Pre-commit hooks for Safe Job Platform
# Install with: pre-commit install

repos:
  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        exclude: ^mkdocs\.yml$
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: check-json
      - id: pretty-format-json
        args: ['--autofix']
      - id: check-toml

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        files: ^backend/
        language_version: python3.13

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort
        files: ^backend/
        args: ["--profile", "black"]

  # Python linting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.5
    hooks:
      - id: ruff
        files: ^backend/
        args: [--fix, --exit-non-zero-on-fix]

  # Django-specific checks (disabled for pre-commit due to Poetry env requirements)
  # Run manually with: cd backend && poetry run python manage.py check
  # - repo: local
  #   hooks:
  #     - id: django-check
  #       name: Django Check
  #       entry: bash -c 'cd backend && poetry run python manage.py check'
  #       language: system
  #       files: ^backend/
  #       types: [python]
  #       pass_filenames: false

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        files: ^backend/
        args: ['-r', '--skip', 'B101,B601']
        exclude: ^backend/.*/(migrations|tests)/.*$

  # Frontend code formatting - Prettier
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        files: ^frontend/
        types_or: [javascript, jsx, ts, tsx, json, css, scss, markdown, yaml]
        exclude: ^frontend/(dist|node_modules|coverage)/

  # Frontend linting - ESLint
  - repo: local
    hooks:
      - id: eslint
        name: ESLint
        entry: bash -c 'cd frontend && npm run lint'
        language: system
        files: ^frontend/src/.*\.(js|jsx|ts|tsx)$
        pass_filenames: false

  # Environment file checks
  - repo: local
    hooks:
      - id: check-env-files
        name: Check for committed .env files
        entry: bash -c 'if find . -name ".env.*.local" | grep -q .; then echo "‚ùå .env.*.local files should not be committed"; exit 1; fi'
        language: system
        files: '\.env.*'
        pass_filenames: false

  # Docker checks
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        files: ^.*Dockerfile.*$

# Configure pre-commit to run on all files during initial setup
default_install_hook_types: [pre-commit, pre-push]
default_stages: [pre-commit]
