name: Deploy Documentation

on:
  push:
    branches: [ main ]
    paths: 
      - 'docs/**'
      - 'mkdocs.yml'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths: 
      - 'docs/**'
      - 'mkdocs.yml'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build documentation
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.0
        with:
          fetch-depth: 0 # Fetch all history for git plugins
      
      - name: Setup Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.11'
          
      - name: Cache pip packages
        uses: actions/cache@v4.2.0
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-docs.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs-material
          pip install mkdocs-git-revision-date-localized-plugin
          pip install mkdocs-awesome-pages-plugin
          
      - name: Build documentation
        run: mkdocs build --clean --strict
        
      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4.6.0
        with:
          name: documentation-site
          path: site/

  # Deploy to GitHub Pages (only on main branch)
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download documentation artifacts
        uses: actions/download-artifact@v4.3.0
        with:
          name: documentation-site
          path: site/
          
      - name: Setup Pages
        uses: actions/configure-pages@v5.0.0
        
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3.0.0
        with:
          path: site/
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5

  # Test documentation build on PRs
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.0
        
      - name: Setup Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs-material
          pip install mkdocs-git-revision-date-localized-plugin
          pip install mkdocs-awesome-pages-plugin
          
      - name: Test documentation build
        run: mkdocs build --clean --strict
        
      - name: Test internal links
        run: |
          # Install link checker
          pip install pytest-html-report
          
          # Start local server in background
          mkdocs serve &
          SERVER_PID=$!
          
          # Wait for server to start
          sleep 5
          
          # Test that server is running
          curl -f http://localhost:8000/ || exit 1
          
          # Kill server
          kill $SERVER_PID