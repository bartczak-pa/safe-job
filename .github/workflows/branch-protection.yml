name: Quick Branch Protection

on:
  push:
    branches: [ main, develop, 'feature/**', 'hotfix/**' ]
  pull_request:
    branches: [ main, develop ]

# Cancel in-progress workflows when a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quick-checks:
    name: Quick Repository Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Repository structure validation
        run: |
          echo "üîç Validating repository structure..."

          # Check for required files
          test -f "README.md" || (echo "‚ùå README.md missing" && exit 1)
          test -f "mkdocs.yml" || (echo "‚ùå mkdocs.yml missing" && exit 1)
          test -f ".envs/.env.example" || (echo "‚ùå Environment example missing" && exit 1)
          test -f "backend/pyproject.toml" || (echo "‚ùå Backend pyproject.toml missing" && exit 1)
          test -f "docker-compose.yml" || (echo "‚ùå Docker compose missing" && exit 1)

          echo "‚úÖ All required files present"

      - name: Check for sensitive files
        run: |
          echo "üîí Checking for sensitive files..."
          if find . -name "*.key" -o -name "*.pem" -o -name ".env.*.local" | grep -q .; then
            echo "‚ùå Sensitive files found in repository"
            find . -name "*.key" -o -name "*.pem" -o -name ".env.*.local"
            exit 1
          fi
          echo "‚úÖ No sensitive files found"

  # Defer comprehensive testing to the main CI workflow
  ci-trigger:
    name: Trigger Full CI
    runs-on: ubuntu-latest
    needs: [quick-checks]
    if: github.event_name == 'pull_request'
    steps:
      - name: CI Status
        run: |
          echo "‚úÖ Quick checks passed"
          echo "üöÄ Full CI pipeline will run automatically"
          echo "Check the 'CI/CD Pipeline' workflow for comprehensive tests"
